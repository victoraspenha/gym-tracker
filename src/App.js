import React, { useState } from "react";
import "./App.css";

const workoutPlan = {
  Monday: [
    { name: "Chest Press Machine / Supino M√°quina", sets: 3, reps: 10, weight: "60‚Äì70% 1RM (~20‚Äì30 kg)" },
    { name: "Incline Press Machine / Supino Inclinado M√°quina", sets: 3, reps: 10, weight: "‚âà60% 1RM (~15‚Äì25 kg)" },
    { name: "Cable Crossover / Crucifixo no Cabo", sets: 3, reps: 12, weight: "5‚Äì12 kg por lado" },
    { name: "Pec Deck Machine / Peck Deck", sets: 3, reps: 12, weight: "35‚Äì45% 1RM (~15‚Äì25 kg)" },
    { name: "Triceps Pushdown (Rope) / Tr√≠ceps Corda", sets: 3, reps: 12, weight: "15‚Äì25 kg" },
    { name: "Overhead Triceps Extension (Cable) / Tr√≠ceps Testa no Cabo", sets: 3, reps: 12, weight: "10‚Äì20 kg" },
    { name: "Standing Dumbbell Lateral Raise / Eleva√ß√£o Lateral com Halteres", sets: 3, reps: 15, weight: "4‚Äì8 kg por lado" },
    { name: "Shoulder Press Machine / Desenvolvimento Ombros M√°quina", sets: 3, reps: 10, weight: "‚âà60% 1RM (~15‚Äì25 kg)" },
    { name: "Front Raise with Cable / Eleva√ß√£o Frontal no Cabo", sets: 3, reps: 12, weight: "4‚Äì8 kg" },
    { name: "Push-ups / Flex√£o de Bra√ßo", sets: 3, reps: 12, weight: "Peso corporal" }
  ],
  Tuesday: [
    { name: "Barbell Hip Thrust / Eleva√ß√£o de Quadril com Barra", sets: 3, reps: 12, weight: "50‚Äì70% 1RM (~40‚Äì60 kg)" },
    { name: "Smith Machine Squat / Agachamento Smith", sets: 4, reps: 10, weight: "50‚Äì60% 1RM (~30‚Äì50 kg)" },
    { name: "Hip Abduction Machine / Abdu√ß√£o de Quadril", sets: 3, reps: 12, weight: "20‚Äì30 kg" },
    { name: "Hip Adduction Machine / Adu√ß√£o de Quadril", sets: 3, reps: 12, weight: "20‚Äì30 kg" },
    { name: "Leg Press Machine / Leg Press", sets: 4, reps: 10, weight: "50‚Äì70% 1RM (~80‚Äì120 kg)" },
    { name: "Seated Calf Raise / Panturrilha Sentado", sets: 3, reps: 15, weight: "20‚Äì30 kg" },
    { name: "Standing Calf Raise / Panturrilha em P√©", sets: 3, reps: 15, weight: "20‚Äì40 kg" },
    { name: "Leg Curl Machine / Flexora", sets: 3, reps: 12, weight: "20‚Äì30 kg" },
    { name: "Leg Extension Machine / Cadeira Extensora", sets: 3, reps: 12, weight: "20‚Äì30 kg" },
    { name: "Kettlebell Power Clean / Power Clean com Kettlebell", sets: 3, reps: 12, weight: "8‚Äì16 kg" }
  ],
  Thursday: [
    { name: "Seated Row Machine / Remada Sentada", sets: 3, reps: 10, weight: "‚âà60% 1RM (~25‚Äì35 kg)" },
    { name: "Preacher Curl Machine / Rosca Scott M√°quina", sets: 3, reps: 12, weight: "15‚Äì25 kg" },
    { name: "Lat Pulldown Machine / Puxada Frente", sets: 3, reps: 10, weight: "‚âà60% 1RM (~25‚Äì35 kg)" },
    { name: "Cable Rear Delt Fly / Crucifixo Inverso no Cabo", sets: 3, reps: 15, weight: "4‚Äì8 kg" },
    { name: "Trap Shrug / Encolhimento de Trap√©zio", sets: 3, reps: 15, weight: "15‚Äì25 kg por lado" },
    { name: "Straight Arm Pulldown / Puxada com Bra√ßo Reto", sets: 3, reps: 12, weight: "15‚Äì25 kg" },
    { name: "Barbell Curl / Rosca Direta Barra", sets: 3, reps: 12, weight: "15‚Äì25 kg" },
    { name: "Hammer Curl / Rosca Martelo", sets: 3, reps: 12, weight: "8‚Äì14 kg por lado" },
    { name: "Back Extension / Extens√£o Lombar", sets: 3, reps: 15, weight: "Peso corporal ou +5‚Äì10 kg" },
    { name: "Rope Face Pull / Face Pull com Corda", sets: 3, reps: 15, weight: "10‚Äì20 kg" }
  ],
  Friday: [
    { name: "Barbell Back Squat / Agachamento Livre", sets: 4, reps: 8, weight: "50‚Äì60% 1RM (~40‚Äì60 kg)" },
    { name: "Deadlift / Levantamento Terra", sets: 4, reps: 6, weight: "50‚Äì60% 1RM (~40‚Äì60 kg)" },
    { name: "Leg Press Machine / Leg Press", sets: 3, reps: 10, weight: "60‚Äì70% 1RM (~80‚Äì120 kg)" },
    { name: "Static Lunge with Dumbbells / Avan√ßo Est√°tico com Halteres", sets: 3, reps: 12, weight: "8‚Äì12 kg por lado" },
    { name: "Standing Calf Raise / Panturrilha em P√©", sets: 4, reps: 15, weight: "20‚Äì40 kg" },
    { name: "Leg Curl Machine / Flexora", sets: 3, reps: 12, weight: "20‚Äì30 kg" },
    { name: "Hack Squat Machine / Agachamento Hack", sets: 3, reps: 10, weight: "50‚Äì60% 1RM (~40‚Äì60 kg)" },
    { name: "Romanian Deadlift / Stiff", sets: 3, reps: 10, weight: "30‚Äì50 kg" },
    { name: "Cable Pull-Through / Passada no Cabo", sets: 3, reps: 12, weight: "15‚Äì25 kg" },
    { name: "Plank / Prancha Isom√©trica", sets: 3, reps: "30‚Äì60s", weight: "Peso corporal" }
  ]
};

function App() {
  const [selectedDay, setSelectedDay] = useState("Monday");
  const [checkedExercises, setCheckedExercises] = useState({});
  const [gymDates, setGymDates] = useState([]);

  const exercises = workoutPlan[selectedDay] || [];

  const handleAddDate = () => {
    const today = new Date().toLocaleDateString();
    if (!gymDates.includes(today)) {
      setGymDates([...gymDates, today]);
    }
  };

  const handleResetWeek = () => {
    // Desmarca todos os exerc√≠cios (todas as abas/dias)
    setCheckedExercises({});
  };

  return (
    <div className="container colorful">
      <div className="summary">
        <p>
          <em>
            Reminder / Lembrete: Update your training plan by <strong>September 30, 2025</strong>.
          </em>
        </p>
      </div>

      <h1 className="title">üèãÔ∏è Gym Tracker</h1>

      <div className="day-buttons">
        {Object.keys(workoutPlan).map((day) => (
          <button
            key={day}
            onClick={() => setSelectedDay(day)}
            className={`day-button ${selectedDay === day ? "active" : ""}`}
          >
            {day}
          </button>
        ))}
      </div>

      <table className="exercise-table">
        <thead>
          <tr>
            <th>Exercise / Exerc√≠cio</th>
            <th>Sets / S√©ries</th>
            <th>Reps / Repeti√ß√µes</th>
            <th>Weight / Peso</th>
            <th>Done / Conclu√≠do</th>
          </tr>
        </thead>
        <tbody>
          {exercises.map((ex, idx) => {
            const key = `${selectedDay}-${idx}`;
            const checked = !!checkedExercises[key];
            return (
              <tr key={idx} className={checked ? "checked-row" : ""}>
                <td>{ex.name}</td>
                <td>{ex.sets}</td>
                <td>{ex.reps}</td>
                <td>{ex.weight || "-"}</td>
                <td>
                  <input
                    type="checkbox"
                    onChange={(e) =>
                      setCheckedExercises((prev) => ({ ...prev, [key]: e.target.checked }))
                    }
                    checked={checked}
                  />
                </td>
              </tr>
            );
          })}
        </tbody>
      </table>

      <div className="actions">
        <button className="primary" onClick={handleAddDate}>
          Log Today / Registrar Hoje
        </button>
        <button className="secondary" onClick={handleResetWeek} title="Clear all checkmarks">
          Reset for Next Week / Limpar para a pr√≥xima semana
        </button>
      </div>

      {gymDates.length > 0 && (
        <div className="log">
          <h3>Training Log / Registro de Treino</h3>
          <ul>
            {gymDates.map((d) => (
              <li key={d}>{d}</li>
            ))}
          </ul>
        </div>
      )}
    </div>
  );
}

export default App;
